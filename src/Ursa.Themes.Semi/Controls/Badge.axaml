<ResourceDictionary
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:Ursa.Converters;assembly=Ursa"
    xmlns:u="https://irihi.tech/ursa">
    <!--  Add Resources Here  -->

    <converters:BadgeContentOverflowConverter x:Key="BadgeContentConverter" />

    <ControlTheme x:Key="{x:Type u:Badge}" TargetType="{x:Type u:Badge}">
        <!--  Set a very large corner radius to achieve pill look.  -->
        <Setter Property="CornerRadius" Value="{DynamicResource BadgeCornerRadius}" />
        <Setter Property="BadgeFontSize" Value="{DynamicResource BadgeFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource BadgeForeground}" />
        <Setter Property="Background" Value="{DynamicResource BadgePrimaryBadgeBackground}" />
        <Setter Property="ClipToBounds" Value="False" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="{DynamicResource BadgeBorderThickness}" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="BorderBrush" Value="{DynamicResource BadgeBorderBrush}" />
        <Setter Property="CornerPosition" Value="{DynamicResource BadgeCornerPosition}" />
        <Setter Property="Template">
            <ControlTemplate TargetType="{x:Type u:Badge}">
                <Grid
                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalAlignment}"
                    ClipToBounds="False">
                    <ContentPresenter
                        Name="{x:Static u:Badge.PART_ContentPresenter}"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        Content="{TemplateBinding Content}"
                        ContentTemplate="{TemplateBinding ContentTemplate}" 
                        Foreground="{DynamicResource BadgeContentForeground}"/>
                    <Border
                        Name="{x:Static u:Badge.PART_BadgeContainer}"
                        MinWidth="{DynamicResource BadgeMinWidth}"
                        MinHeight="{DynamicResource BadgeMinHeight}"
                        Padding="{DynamicResource BadgePadding}"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        IsVisible="{Binding !!Header, RelativeSource={RelativeSource TemplatedParent}}"
                        RenderTransformOrigin=".5,.5"
                        Theme="{TemplateBinding BadgeTheme}"
                        UseLayoutRounding="False">
                        <ContentPresenter
                            Name="{x:Static u:Badge.PART_HeaderPresenter}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Focusable="False"
                            IsTabStop="False"
                            TextElement.FontSize="{TemplateBinding BadgeFontSize}"
                            TextElement.Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter.Content>
                                <MultiBinding Converter="{StaticResource BadgeContentConverter}">
                                    <Binding Path="Header" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="OverflowCount" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </Border>
                </Grid>
            </ControlTemplate>
        </Setter>

        <Style Selector="^[Dot=True]">
            <Setter Property="u:Badge.Template">
                <ControlTemplate TargetType="{x:Type u:Badge}">
                    <Grid
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        ClipToBounds="False">
                        <ContentPresenter
                            Name="{x:Static u:Badge.PART_ContentPresenter}"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}" 
                            Foreground="{DynamicResource BadgeContentForeground}"/>
                        <Border
                            Name="{x:Static u:Badge.PART_BadgeContainer}"
                            Width="{DynamicResource BadgeDotWidth}"
                            Height="{DynamicResource BadgeDotHeight}"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            IsVisible="{Binding !!Header, RelativeSource={RelativeSource TemplatedParent}}"
                            RenderTransformOrigin=".5,.5" />
                    </Grid>
                </ControlTemplate>
            </Setter>
        </Style>

        <Style Selector="^[CornerPosition=TopLeft] /template/ Border#PART_BadgeContainer">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Top" />
        </Style>
        <Style Selector="^[CornerPosition=TopRight] /template/ Border#PART_BadgeContainer">
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="VerticalAlignment" Value="Top" />
        </Style>
        <Style Selector="^[CornerPosition=BottomLeft] /template/ Border#PART_BadgeContainer">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
        </Style>
        <Style Selector="^[CornerPosition=BottomRight] /template/ Border#PART_BadgeContainer">
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
        </Style>

        <Style Selector="^.Primary">
            <Setter Property="Background" Value="{DynamicResource BadgePrimaryBadgeBackground}" />
        </Style>
        <Style Selector="^.Secondary">
            <Setter Property="Background" Value="{DynamicResource BadgeSecondaryBadgeBackground}" />
        </Style>
        <Style Selector="^.Tertiary">
            <Setter Property="Background" Value="{DynamicResource BadgeTertiaryBadgeBackground}" />
        </Style>
        <Style Selector="^.Success">
            <Setter Property="Background" Value="{DynamicResource BadgeSuccessBadgeBackground}" />
        </Style>
        <Style Selector="^.Warning">
            <Setter Property="Background" Value="{DynamicResource BadgeWarningBadgeBackground}" />
        </Style>
        <Style Selector="^.Danger">
            <Setter Property="Background" Value="{DynamicResource BadgeDangerBadgeBackground}" />
        </Style>

        <Style Selector="^.Light">
            <Style Selector="^.Primary">
                <Setter Property="Foreground" Value="{DynamicResource BadgeLightPrimaryBadgeForeground}" />
                <Setter Property="Background" Value="{DynamicResource BadgeLightPrimaryBadgeBackground}" />
            </Style>
            <Style Selector="^.Secondary">
                <Setter Property="Foreground" Value="{DynamicResource BadgeLightSecondaryBadgeForeground}" />
                <Setter Property="Background" Value="{DynamicResource BadgeLightSecondaryBadgeBackground}" />
            </Style>
            <Style Selector="^.Tertiary">
                <Setter Property="Foreground" Value="{DynamicResource BadgeLightTertiaryBadgeForeground}" />
                <Setter Property="Background" Value="{DynamicResource BadgeLightTertiaryBadgeBackground}" />
            </Style>
            <Style Selector="^.Success">
                <Setter Property="Foreground" Value="{DynamicResource BadgeLightSuccessBadgeForeground}" />
                <Setter Property="Background" Value="{DynamicResource BadgeLightSuccessBadgeBackground}" />
            </Style>
            <Style Selector="^.Warning">
                <Setter Property="Foreground" Value="{DynamicResource BadgeLightWarningBadgeForeground}" />
                <Setter Property="Background" Value="{DynamicResource BadgeLightWarningBadgeBackground}" />
            </Style>
            <Style Selector="^.Danger">
                <Setter Property="Foreground" Value="{DynamicResource BadgeLightDangerBadgeForeground}" />
                <Setter Property="Background" Value="{DynamicResource BadgeLightDangerBadgeBackground}" />
            </Style>
        </Style>
        <Style Selector="^.Inverted">
            <Setter Property="Background" Value="{DynamicResource BadgeInvertedBadgeBackground}" />
            <Style Selector="^.Primary">
                <Setter Property="Foreground" Value="{DynamicResource BadgeInvertedPrimaryBadgeForeground}" />
            </Style>
            <Style Selector="^.Secondary">
                <Setter Property="Foreground" Value="{DynamicResource BadgeInvertedSecondaryBadgeForeground}" />
            </Style>
            <Style Selector="^.Tertiary">
                <Setter Property="Foreground" Value="{DynamicResource BadgeInvertedTertiaryBadgeForeground}" />
            </Style>
            <Style Selector="^.Success">
                <Setter Property="Foreground" Value="{DynamicResource BadgeInvertedSuccessBadgeForeground}" />
            </Style>
            <Style Selector="^.Warning">
                <Setter Property="Foreground" Value="{DynamicResource BadgeInvertedWarningBadgeForeground}" />
            </Style>
            <Style Selector="^.Danger">
                <Setter Property="Foreground" Value="{DynamicResource BadgeInvertedDangerBadgeForeground}" />
            </Style>
        </Style>
    </ControlTheme>
</ResourceDictionary>